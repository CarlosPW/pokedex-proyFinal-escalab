{"version":3,"sources":["webpack:///./src/components/constants/NotFound404.jsx","webpack:///./src/components/FavoritesScreen.jsx","webpack:///./src/assets/img/img_login/imgPokemon_login.png","webpack:///./src/components/LoginScreen.jsx","webpack:///./src/routes/AppRouter.js"],"names":["NotFound404","className","mapDispatchToProps","setFavorite","deleteFavorite","connect","state","favoritePokemons","props","useState","isOpen","setIsOpen","idToModal","setidToModal","openModal","Header","length","map","poke","Pokedex","id","pokemonName","key","onClick","ModalScreen","afterOpenModal","closeModal","LoginScreen","push","useHistory","dispatch","useDispatch","handleLogout","clearPokemonsLogout","startLogout","name","useSelector","photo","headerLoading","startGoogleLogin","src","alt","PokemonImage","AppRouter","useEffect","firebase","auth","onAuthStateChanged","user","uid","login","displayName","photoURL","getFavoriteFirebase","fav","forEach","item","pokedexLoading","setHeaderLoading","exact","path","HomeScreen","component"],"mappings":"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","file":"3.bundle.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotFound404 = () => {\r\n\treturn (\r\n\t\t<div className=\"homeScreen\">\r\n\t\t\t<div className=\"homeScreen__container\">\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<h1>404 Error</h1>\r\n\t\t\t\t<h2>Page Not Found</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NotFound404;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./constants/Header\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { setFavorite, deleteFavorite } from \"./../actions\";\r\nimport Pokedex from \"./Pokedex\";\r\n\r\nimport ModalScreen from \"./constants/ModalScreen\";\r\n\r\nconst FavoritesScreen = (props) => {\r\n\tconst { favoritePokemons } = props;\r\n\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\tconst [idToModal, setidToModal] = useState();\r\n\r\n\tfunction openModal() {\r\n\t\tsetIsOpen(true);\r\n\t}\r\n\r\n\tfunction afterOpenModal() {}\r\n\r\n\tfunction closeModal() {\r\n\t\tsetIsOpen(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"favorites__container\">\r\n\t\t\t<Header />\r\n\r\n\t\t\t<div className=\"favorites__listcontainer\">\r\n\t\t\t\t{!favoritePokemons.length\r\n\t\t\t\t\t? null\r\n\t\t\t\t\t: favoritePokemons.map((poke) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Pokedex\r\n\t\t\t\t\t\t\t\t\tid={poke.id}\r\n\t\t\t\t\t\t\t\t\tpokemonName={poke.pokemonName}\r\n\t\t\t\t\t\t\t\t\tkey={poke.id}\r\n\t\t\t\t\t\t\t\t\topenModal={openModal}\r\n\t\t\t\t\t\t\t\t\tsetidToModal={setidToModal}\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tsetidToModal(poke.id);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })}\r\n\t\t\t</div>\r\n\t\t\t<ModalScreen\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tafterOpenModal={afterOpenModal}\r\n\t\t\t\tcloseModal={closeModal}\r\n\t\t\t\tsetIsOpen={setIsOpen}\r\n\t\t\t\tid={idToModal}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tfavoritePokemons: state.favoritePokemons,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\tsetFavorite,\r\n\tdeleteFavorite,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesScreen);\r\n","export default __webpack_public_path__ + \"b17811cd3895af1b45b6da3a6d83481c.png\";","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { clearPokemonsLogout, startGoogleLogin, startLogout } from \"../actions\";\r\n\r\nimport PokemonImage from \"./../assets/img/img_login/imgPokemon_login.png\";\r\n\r\nexport const LoginScreen = () => {\r\n\tconst { push } = useHistory();\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst handleGoogleLogin = () => {\r\n\t\tdispatch(startGoogleLogin());\r\n\t};\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tdispatch(clearPokemonsLogout());\r\n\t\tdispatch(startLogout());\r\n\t};\r\n\r\n\tconst name = useSelector((state) => state.name);\r\n\tconst photo = useSelector((state) => state.photo);\r\n\tconst headerLoading = useSelector((state) => state.headerLoading);\r\n\r\n\treturn (\r\n\t\t<div className=\"loginScreen\">\r\n\t\t\t<div className=\"loginScreen__container\">\r\n\t\t\t\t{headerLoading ? (\r\n\t\t\t\t\t<h2 className=\"header__info\">...</h2>\r\n\t\t\t\t) : name === null ? (\r\n\t\t\t\t\t<div className=\"loginScreen__form\">\r\n\t\t\t\t\t\t<div className=\"loginScreen__login\">\r\n\t\t\t\t\t\t\t<h3>Log In</h3>\r\n\t\t\t\t\t\t\t<div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n\t\t\t\t\t\t\t\t<div className=\"google-icon-wrapper\">\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"google-icon\"\r\n\t\t\t\t\t\t\t\t\t\tsrc=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n\t\t\t\t\t\t\t\t\t\talt=\"google button\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<p className=\"btn-text\">\r\n\t\t\t\t\t\t\t\t\t<b>Sign in with google</b>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"loginScreen__form_active\">\r\n\t\t\t\t\t\t<h1>Welcome {name}</h1>\r\n\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={photo} alt=\"profile_img\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"loginScreen__buttonLogout\" onClick={handleLogout}>\r\n\t\t\t\t\t\t\tLOGOUT\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className=\"loginScreen__right\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tpush(\"/\");\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName=\"loginScreen__button\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"far fa-arrow-alt-circle-left\"></i>\r\n\t\t\t\t\t\tGo Back\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<img src={PokemonImage} alt=\"\" />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport {\r\n\tgetFavoriteFirebase,\r\n\tlogin,\r\n\tpokedexLoading,\r\n\tsetFavorite,\r\n\tsetHeaderLoading,\r\n} from \"../actions\";\r\nimport NotFound404 from \"../components/constants/NotFound404\";\r\nimport FavoritesScreen from \"../components/FavoritesScreen\";\r\nimport HomeScreen from \"../components/HomeScreen\";\r\nimport { LoginScreen } from \"../components/LoginScreen\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\n\r\nexport default function AppRouter() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.auth().onAuthStateChanged(async (user) => {\r\n\t\t\t// console.log(user);\r\n\t\t\tif (user?.uid) {\r\n\t\t\t\tdispatch(login(user.uid, user.displayName, user.photoURL));\r\n\t\t\t\tconst fav = await getFavoriteFirebase(user.uid);\r\n\t\t\t\tif (fav.length > 0) {\r\n\t\t\t\t\tfav.forEach((item) => dispatch(setFavorite(item)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(pokedexLoading(false));\r\n\t\t\tdispatch(setHeaderLoading(false));\r\n\t\t});\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path=\"/login\">\r\n\t\t\t\t\t\t<LoginScreen />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/favorites\">\r\n\t\t\t\t\t\t<FavoritesScreen />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t<HomeScreen />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route component={NotFound404} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n"],"sourceRoot":""}