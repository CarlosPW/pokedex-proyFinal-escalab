{"version":3,"sources":["webpack:///./components/_loginScreen.scss","webpack:///./base/_responsive.scss","webpack:///./base/_settings.scss","webpack:///./components/_homeScreen.scss","webpack:///./components/_header.scss","webpack:///./components/_pokedex.scss","webpack:///./components/_favoritesScreen.scss","webpack:///./components/_modalScreen.scss","webpack:///./components/_loadingScreen.scss","webpack:///./styles.scss"],"names":[],"mappings":"AAAA,aACC,yBACA,YACA,aAGD,wBACC,iBACA,yDACA,2BACA,aACA,cAEA,aACA,6BACA,mBACA,aCijBC,0BD3jBF,wBAYE,sBACA,cAIF,mBACC,gBACA,aAEA,kBElBO,CFmBP,wCACA,mBACA,iBCmiBC,0BD1iBF,mBAUE,cACA,WAIF,oBACC,aACA,aACA,sBACA,6BACA,mBACA,kBCqhBC,0BD3hBF,oBASE,gBACA,gBCihBA,0BD9gBD,wBAEE,aACA,aAKH,qBACC,aACA,6BACA,mBAEA,eAEA,YACA,YAEA,kBEnES,CFoET,uCACA,mBAEA,kBACA,mBACA,eACA,iBACA,aACA,YAEA,cAEA,uBACC,eACA,iBAGD,2BACC,mBAIF,0BACC,YACA,YACA,aACA,YACA,kBEhGS,CFiGT,uCACA,mBACA,kBACA,mBACA,eACA,cAEA,gCACC,mBAIF,oBACC,gBACA,aACA,sBACA,aACA,mBACA,eACA,iBAGD,0BACC,UACA,gBACA,aAEA,kBEpHO,CFqHP,wCACA,mBACA,iBACA,aACA,sBACA,uBACA,mBACA,kBAEC,kCACC,gBACA,mBACA,gBACA,kBCsbD,0BDzcF,0BAwBE,cACA,UACA,aC+aA,yBD5aD,6BAEE,eACA,gBAKH,2BACC,aACA,uBACA,mBACA,YACA,YACA,YACA,kBEnKS,CFoKT,uCACA,mBAEA,eACA,cACA,eAEA,iCACC,mBAIF,YACC,aAEA,8BACA,mBACA,eACA,gBACA,YACA,YACA,wBE9Ka,CF+Kb,kBACA,uCAEA,+BCmYC,yBDhZF,YAgBE,UACA,aACA,wBAGD,iCACC,gBACA,WACA,YACA,kBACA,qBEhMM,CFkMP,yBACC,kBACA,gBACA,iBACA,WACA,YAED,sBACC,UE1MM,CF2MN,eACA,oBACA,kBCyWA,yBD7WD,sBAME,cAGF,kBACC,2BAED,mBACC,kBEpNmB,CCbrB,YACC,yBACA,YACA,aAGD,uBACC,iBACA,yDAEA,YAEA,cACA,aACA,sBACA,mBACA,gBAGD,iBACC,aACA,gBACA,eACA,WACA,iBACA,8BACA,mBFuiBC,0BE9iBF,iBAUE,wBAIF,kBACC,iBF+hBC,0BEhiBF,kBAIE,cAIF,qBACC,YACA,aACA,kBDxCS,CCyCT,mBACA,uCACA,mBFkhBC,yBExhBF,qBAQE,WFghBA,yBE5gBF,cAEE,uBF0gBA,yBEvgBD,oBAEE,oBAKH,yBACC,YACA,YACA,aACA,YACA,kBDpES,CCqET,uCACA,mBACA,eACA,eACA,iBAEA,cAEA,+BACC,mBAIF,gCACC,YACA,YACA,aACA,YACA,uCACA,mBACA,eACA,eACA,iBAEA,cACA,mBAGD,gBACC,mBACA,aACA,6BAEA,YFydC,yBEvdD,mBAEE,cFqdD,yBEjdD,+BAEE,cAKH,cACC,cACA,YACA,aACA,gBACA,sBACA,kBAGD,gBACC,aACA,6BACA,mBACA,cACA,YACA,YACA,mBACA,sBACA,gBAGD,qBACC,eACA,iBACA,aDtIO,CCuIP,wCACA,eACA,YACA,gBACA,aAEA,2BACC,cCvJF,oBACC,gBACA,YACA,iBACA,aACA,6BACA,mBAEA,uBACC,eACA,iBAEA,aFLW,CEMX,wCACA,gBHmjBA,yBGzjBD,uBASE,oBAGA,4BACC,aFdS,CEeT,qBACA,kCACC,cAGF,gCACC,cHqiBF,yBGjkBF,oBAkCE,sBACA,kBACA,cAIF,cACC,aHwhBC,yBGzhBF,cAGE,cACA,oBHqhBA,yBGjhBF,cAEE,cAIF,mBACC,eACA,iBACA,mBACA,eACA,wCACA,mBACA,qBACC,qBACA,aFxDW,CEyDX,2BACC,cAKH,cACC,eACA,iBACA,eACA,aFnEY,CEoEZ,wCACA,mBACA,oBACC,cAIF,eACC,WACA,kBAIA,mBACC,aACA,uBACA,mBHseA,yBG1eF,iBAQE,cHkeA,yBIjkBF,cAEE,WAIF,eACC,WACA,gBACA,aACA,eACA,gBACA,sBACA,gBACA,iBACA,kBAEA,aACA,8BACA,mBACA,eAEA,qBACC,kDJ0iBA,yBI3jBF,eAqBE,WACA,eAIF,yBACC,aACA,mBJ+hBC,yBIxhBD,4BAEE,gBJshBD,yBIxhBD,4BAKE,gBJmhBD,yBIxhBD,4BAQE,gBJghBD,yBIxhBD,4BAWE,gBJ6gBD,yBIvgBD,kBAEE,WAKH,gBACC,eACA,iBACA,0BACA,WJ4fC,yBIhgBF,gBAOE,iBAIF,eACC,kBACA,mBACA,eACA,iBACA,cJgfC,yBI7eF,cAEE,cAIF,wBACC,aHpFY,CGwFZ,qBACC,eACA,eACA,WAEA,2BACC,cJ4dD,yBIneF,gBAWE,WAIF,sBACC,gBACA,sBACA,sBACA,uCACA,kBACA,YACA,YACA,aAGD,cACC,mBACA,gBACA,WACA,aACA,6BAGD,qBACC,iBCjID,sBACC,iBACA,wDACA,aACA,cACA,aACA,sBACA,mBACA,gBAGD,0BACC,gBACA,UACA,gBACA,aACA,kBACA,sBACA,sBACA,mBCnBD,aACC,aACA,sBACA,uBACA,mBACA,aACA,0BACA,eACA,YNyjBC,yBMjkBF,aAUE,iBACA,qBAIF,wBACC,aNijBC,yBMljBF,wBAIE,sBACA,uBACA,oBAIF,mBACC,aACA,sBACA,mBAGD,0BACC,aACA,uBACA,mBN+hBC,yBMliBF,0BAKE,cAIF,oBACC,mBNwhBC,yBMzhBF,oBAGE,kBAIF,kBACC,kBNihBC,yBMlhBF,kBAGE,gBACA,eACA,eN6gBA,yBMzgBF,aAEE,iBACA,aAIF,mBACC,YAEA,sBACC,gBACA,eACA,yBACC,iBACA,gCACC,eAMJ,cACC,YACA,YNifC,yBMnfF,cAIE,YACA,gBCnFF,0BACC,YACA,aACA,wDACA,aACA,uBACA,mBCMD,EACC,SACA,UACA,qCACA,8B","file":"main.css","sourcesContent":[".loginScreen {\r\n\tbackground-color: #02020a;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n}\r\n\r\n.loginScreen__container {\r\n\tmax-width: 1920px;\r\n\tbackground-image: url(\"../../assets/img/img_login/bg_login.png\");\r\n\tbackground-repeat: repeat-x;\r\n\theight: 100vh;\r\n\tmargin: 0 auto;\r\n\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\tpadding: 60px;\r\n\t@include media(\"<1110px\") {\r\n\t\tflex-direction: column;\r\n\t\tpadding: 30px;\r\n\t}\r\n}\r\n\r\n.loginScreen__form {\r\n\tmax-width: 667px;\r\n\theight: 228px;\r\n\r\n\tbackground: $modal;\r\n\tbox-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 56px;\r\n\tmargin-left: 40px;\r\n\r\n\t@include media(\"<1110px\") {\r\n\t\tmargin-left: 0;\r\n\t\twidth: 95%;\r\n\t}\r\n}\r\n\r\n.loginScreen__right {\r\n\tdisplay: flex;\r\n\theight: 100vh;\r\n\tflex-direction: column;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\tmargin-right: 40px;\r\n\r\n\t@include media(\"<1110px\") {\r\n\t\tmargin-top: 30px;\r\n\t\tmargin-right: 0;\r\n\t}\r\n\r\n\timg {\r\n\t\t@include media(\"<1110px\") {\r\n\t\t\tdisplay: none;\r\n\t\t\theight: 20vh;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.loginScreen__button {\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n\talign-items: center;\r\n\r\n\tcursor: pointer;\r\n\r\n\twidth: 282px;\r\n\theight: 94px;\r\n\r\n\tbackground: $button2;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 16px;\r\n\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n\tfont-size: 33px;\r\n\tline-height: 48px;\r\n\toutline: none;\r\n\tborder: none;\r\n\r\n\tcolor: #f8efef;\r\n\r\n\ti {\r\n\t\tfont-size: 62px;\r\n\t\tline-height: 71px;\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tbackground: darken($button2, 10%);\r\n\t}\r\n}\r\n\r\n.loginScreen__buttonLogin {\r\n\twidth: 131px;\r\n\theight: 61px;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbackground: $button1;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 13px;\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n\tfont-size: 33px;\r\n\tcolor: #f8efef;\r\n\r\n\t&:hover {\r\n\t\tbackground: darken($button1, 10%);\r\n\t}\r\n}\r\n\r\n.loginScreen__login {\r\n\tmargin-top: 35px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\theight: 300px;\r\n\talign-items: center;\r\n\tfont-size: 40px;\r\n\tline-height: 58px;\r\n}\r\n\r\n.loginScreen__form_active {\r\n\twidth: 98%;\r\n\tmax-width: 667px;\r\n\theight: 828px;\r\n\r\n\tbackground: $modal;\r\n\tbox-shadow: 0px 4px 10px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 56px;\r\n\tmargin-left: 40px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n\tdiv {\r\n\t\timg {\r\n\t\t\tmargin-top: 40px;\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t\tmax-width: 200px;\r\n\t\t\tborder-radius: 10%;\r\n\t\t}\r\n\t}\r\n\r\n\t@include media(\"<1110px\") {\r\n\t\tmargin-left: 0;\r\n\t\twidth: 95%;\r\n\t\tpadding: 5px;\r\n\t}\r\n\r\n\th1 {\r\n\t\t@include media(\"<350px\") {\r\n\t\t\tpadding: 0 10px;\r\n\t\t\tfont-size: 25px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.loginScreen__buttonLogout {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 131px;\r\n\theight: 61px;\r\n\tborder: none;\r\n\tbackground: $button1;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 13px;\r\n\r\n\tfont-size: 33px;\r\n\tcolor: #f8efef;\r\n\tcursor: pointer;\r\n\r\n\t&:hover {\r\n\t\tbackground: darken($button1, 10%);\r\n\t}\r\n}\r\n\r\n.google-btn {\r\n\tdisplay: flex;\r\n\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tcursor: pointer;\r\n\tmargin-top: 40px;\r\n\twidth: 300px;\r\n\theight: 42px;\r\n\tbackground-color: $google-blue;\r\n\tborder-radius: 2px;\r\n\tbox-shadow: 0 3px 4px 0 rgba(0, 0, 0, 0.25);\r\n\r\n\ttransition: box-shadow 0.3s ease;\r\n\r\n\t@include media(\"<350px\") {\r\n\t\twidth: 70%;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t}\r\n\r\n\t.google-icon-wrapper {\r\n\t\tmargin-left: 1px;\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground-color: $white;\r\n\t}\r\n\t.google-icon {\r\n\t\tposition: absolute;\r\n\t\tmargin-top: 11px;\r\n\t\tmargin-left: 11px;\r\n\t\twidth: 18px;\r\n\t\theight: 18px;\r\n\t}\r\n\t.btn-text {\r\n\t\tcolor: $white;\r\n\t\tfont-size: 16px;\r\n\t\tletter-spacing: 0.2px;\r\n\t\tmargin-right: 80px;\r\n\t\t@include media(\"<350px\") {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\t&:hover {\r\n\t\tbox-shadow: 0 0 6px $google-blue;\r\n\t}\r\n\t&:active {\r\n\t\tbackground: $button-active-blue;\r\n\t}\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n\t\"phone\": 320px,\r\n\t\"tablet\": 768px,\r\n\t\"desktop\": 1024px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n\t\"screen\": \"screen\",\r\n\t\"print\": \"print\",\r\n\t\"handheld\": \"handheld\",\r\n\t\"landscape\": \"(orientation: landscape)\",\r\n\t\"portrait\": \"(orientation: portrait)\",\r\n\t\"retina2x\":\r\n\t\t\"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\r\n\t\"retina3x\":\r\n\t\t\"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n\t\"px\": 1,\r\n\t\"em\": 0.01,\r\n\t\"rem\": 0.1,\r\n\t\"\": 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: \"desktop\" !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n\t@if feature-exists(\"at-error\") {\r\n\t\t@error $message;\r\n\t} @else {\r\n\t\t@warn $message;\r\n\t\t$_: noop();\r\n\t}\r\n\r\n\t@return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n\t@if im-log($message) {\r\n\t}\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n\t$no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n\t@if not $no-media-breakpoint-value {\r\n\t\t@if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\r\n\t\t}\r\n\t}\r\n\r\n\t@each $condition in $conditions {\r\n\t\t@if not map-has-key($media-expressions, $condition) {\r\n\t\t\t$operator: get-expression-operator($condition);\r\n\t\t\t$prefix: get-expression-prefix($operator);\r\n\t\t\t$value: get-expression-value($condition, $operator);\r\n\r\n\t\t\t@if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\r\n\t\t\t\t($prefix == \"min\" and $value > $no-media-breakpoint-value)\r\n\t\t\t{\r\n\t\t\t\t@return false;\r\n\t\t\t}\r\n\t\t} @else if not index($im-no-media-expressions, $condition) {\r\n\t\t\t@return false;\r\n\t\t}\r\n\t}\r\n\r\n\t@return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n\t@each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\r\n\t\t@if str-index($expression, $operator) {\r\n\t\t\t@return $operator;\r\n\t\t}\r\n\t}\r\n\r\n\t// It is not possible to include a mixin inside a function, so we have to\r\n\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n\t// functions cannot be called anywhere in Sass, we need to hack the call in\r\n\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n\t$_: im-log(\"No operator found in `#{$expression}`.\");\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n\t$operator-index: str-index($expression, $operator);\r\n\t$parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n\t$dimension: \"width\";\r\n\r\n\t@if str-length($parsed-dimension) > 0 {\r\n\t\t$dimension: $parsed-dimension;\r\n\t}\r\n\r\n\t@return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n\t@return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n\t$operator-index: str-index($expression, $operator);\r\n\t$value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n\t@if map-has-key($breakpoints, $value) {\r\n\t\t$value: map-get($breakpoints, $value);\r\n\t} @else {\r\n\t\t$value: to-number($value);\r\n\t}\r\n\r\n\t$interval: map-get($unit-intervals, unit($value));\r\n\r\n\t@if not $interval {\r\n\t\t// It is not possible to include a mixin inside a function, so we have to\r\n\t\t// rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n\t\t// functions cannot be called anywhere in Sass, we need to hack the call in\r\n\t\t// a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n\t\t// Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n\t\t$_: im-log(\"Unknown unit `#{unit($value)}`.\");\r\n\t}\r\n\r\n\t@if $operator == \">\" {\r\n\t\t$value: $value + $interval;\r\n\t} @else if $operator == \"<\" {\r\n\t\t$value: $value - $interval;\r\n\t}\r\n\r\n\t@return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n\t// If it is part of $media-expressions, it has no operator\r\n\t// then there is no need to go any further, just return the value\r\n\t@if map-has-key($media-expressions, $expression) {\r\n\t\t@return map-get($media-expressions, $expression);\r\n\t}\r\n\r\n\t$operator: get-expression-operator($expression);\r\n\t$dimension: get-expression-dimension($expression, $operator);\r\n\t$prefix: get-expression-prefix($operator);\r\n\t$value: get-expression-value($expression, $operator);\r\n\r\n\t@return \"(#{$prefix}-#{$dimension}: #{$value})\";\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n\t@if length($list) < 1 or $start > $end {\r\n\t\t@return ();\r\n\t}\r\n\r\n\t$result: ();\r\n\r\n\t@for $i from $start through $end {\r\n\t\t$result: append($result, nth($list, $i));\r\n\t}\r\n\r\n\t@return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n\t@if type-of($value) == \"number\" {\r\n\t\t@return $value;\r\n\t} @else if type-of($value) != \"string\" {\r\n\t\t$_: im-log(\"Value for `to-number` should be a number or a string.\");\r\n\t}\r\n\r\n\t$first-character: str-slice($value, 1, 1);\r\n\t$result: 0;\r\n\t$digits: 0;\r\n\t$minus: ($first-character == \"-\");\r\n\t$numbers: (\r\n\t\t\"0\": 0,\r\n\t\t\"1\": 1,\r\n\t\t\"2\": 2,\r\n\t\t\"3\": 3,\r\n\t\t\"4\": 4,\r\n\t\t\"5\": 5,\r\n\t\t\"6\": 6,\r\n\t\t\"7\": 7,\r\n\t\t\"8\": 8,\r\n\t\t\"9\": 9,\r\n\t);\r\n\r\n\t// Remove +/- sign if present at first character\r\n\t@if ($first-character == \"+\" or $first-character == \"-\") {\r\n\t\t$value: str-slice($value, 2);\r\n\t}\r\n\r\n\t@for $i from 1 through str-length($value) {\r\n\t\t$character: str-slice($value, $i, $i);\r\n\r\n\t\t@if not(index(map-keys($numbers), $character) or $character == \".\") {\r\n\t\t\t@return to-length(if($minus, -$result, $result), str-slice($value, $i));\r\n\t\t}\r\n\r\n\t\t@if $character == \".\" {\r\n\t\t\t$digits: 1;\r\n\t\t} @else if $digits == 0 {\r\n\t\t\t$result: $result * 10 + map-get($numbers, $character);\r\n\t\t} @else {\r\n\t\t\t$digits: $digits * 10;\r\n\t\t\t$result: $result + map-get($numbers, $character) / $digits;\r\n\t\t}\r\n\t}\r\n\r\n\t@return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n\t$units: (\r\n\t\t\"px\": 1px,\r\n\t\t\"cm\": 1cm,\r\n\t\t\"mm\": 1mm,\r\n\t\t\"%\": 1%,\r\n\t\t\"ch\": 1ch,\r\n\t\t\"pc\": 1pc,\r\n\t\t\"in\": 1in,\r\n\t\t\"em\": 1em,\r\n\t\t\"rem\": 1rem,\r\n\t\t\"pt\": 1pt,\r\n\t\t\"ex\": 1ex,\r\n\t\t\"vw\": 1vw,\r\n\t\t\"vh\": 1vh,\r\n\t\t\"vmin\": 1vmin,\r\n\t\t\"vmax\": 1vmax,\r\n\t);\r\n\r\n\t@if not index(map-keys($units), $unit) {\r\n\t\t$_: im-log(\"Invalid unit `#{$unit}`.\");\r\n\t}\r\n\r\n\t@return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n\t// Save global configuration\r\n\t$global-breakpoints: $breakpoints;\r\n\t$global-media-expressions: $media-expressions;\r\n\r\n\t// Update global configuration\r\n\t$breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n\t$media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n\t@content;\r\n\r\n\t// Restore global configuration\r\n\t$breakpoints: $global-breakpoints !global;\r\n\t$media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n\t@if ($im-media-support and length($conditions) == 0) or\r\n\t\t(not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n\t{\r\n\t\t@content;\r\n\t} @else if ($im-media-support and length($conditions) > 0) {\r\n\t\t@media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n\t\t\t// Recursive call\r\n\t\t\t@include media(slice($conditions, 2)...) {\r\n\t\t\t\t@content;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","// Colors\r\n$button1: #e96464;\r\n$button2: #0fa3b1;\r\n\r\n$pokedex: #ff6b6b;\r\n$footer-pokedex: #4ecdc4;\r\n\r\n$yellow-nav: #ffe500;\r\n\r\n$modal: #f7fff7;\r\n\r\n$white: #fff;\r\n$google-blue: #4285f4;\r\n$button-active-blue: #1669f2;\r\n",".homeScreen {\r\n\tbackground-color: #02020a;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n}\r\n\r\n.homeScreen__container {\r\n\tmax-width: 1920px;\r\n\tbackground-image: url(\"../../assets/img/img_home/bg_home.png\");\r\n\t// background-repeat: repeat-x;\r\n\theight: 100%;\r\n\t// background-size: auto 100%;\r\n\tmargin: 0 auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\toverflow: scroll;\r\n}\r\n\r\n.homeScreen__box {\r\n\tdisplay: flex;\r\n\tmargin-top: 60px;\r\n\tpadding: 0 20px;\r\n\twidth: 100%;\r\n\tmax-width: 1440px;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\r\n\t@include media(\"<1100px\") {\r\n\t\tjustify-content: center;\r\n\t}\r\n}\r\n\r\n.homeScreen__left {\r\n\tmargin-top: 120px;\r\n\r\n\t@include media(\"<1100px\") {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.homeScreen__pokedex {\r\n\twidth: 588px;\r\n\theight: 676px;\r\n\tbackground: $pokedex;\r\n\tborder-radius: 48px;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tmargin-bottom: 30px;\r\n\t@include media(\"<425px\") {\r\n\t\twidth: 95%;\r\n\t}\r\n}\r\n\r\n.form_pokedex {\r\n\t@include media(\"<450px\") {\r\n\t\tflex-direction: column;\r\n\t}\r\n\r\n\tinput {\r\n\t\t@include media(\"<450px\") {\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.homeScreen_searchButton {\r\n\twidth: 134px;\r\n\theight: 51px;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbackground: $button2;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 13px;\r\n\tcursor: pointer;\r\n\tfont-size: 33px;\r\n\tline-height: 48px;\r\n\r\n\tcolor: #f8efef;\r\n\r\n\t&:hover {\r\n\t\tbackground: darken($button2, 10%);\r\n\t}\r\n}\r\n\r\n.homeScreen_searchButton_active {\r\n\twidth: 134px;\r\n\theight: 51px;\r\n\toutline: none;\r\n\tborder: none;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 13px;\r\n\tcursor: pointer;\r\n\tfont-size: 33px;\r\n\tline-height: 48px;\r\n\r\n\tcolor: #f8efef;\r\n\tbackground: darken($button2, 10%);\r\n}\r\n\r\n.pokedex_header {\r\n\talign-items: center;\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n\r\n\theight: 70px;\r\n\r\n\th1 {\r\n\t\t@include media(\"<350px\") {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n\r\n\t.pokedex__icon {\r\n\t\t@include media(\"<500px\") {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.pokedex_body {\r\n\tmargin: 0 auto;\r\n\twidth: 543px;\r\n\theight: 498px;\r\n\tbackground: #ffffff;\r\n\tborder: 2px solid #000000;\r\n\toverflow-y: scroll;\r\n}\r\n\r\n.pokedex_footer {\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\tmargin: 0 auto;\r\n\twidth: 543px;\r\n\theight: 76px;\r\n\tbackground: #4ecdc4;\r\n\tborder: 2px solid #000000;\r\n\tborder-top: none;\r\n}\r\n\r\n.pokedex_footer_icon {\r\n\tfont-size: 58px;\r\n\tline-height: 67px;\r\n\tcolor: $modal;\r\n\ttext-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tcursor: pointer;\r\n\tborder: none;\r\n\tbackground: none;\r\n\toutline: none;\r\n\r\n\t&:hover {\r\n\t\tcolor: darken($modal, 20%);\r\n\t}\r\n}\r\n",".header___container {\r\n\tmargin-top: 30px;\r\n\twidth: 100vw;\r\n\tmax-width: 1440px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-around;\r\n\talign-items: center;\r\n\r\n\tul {\r\n\t\tfont-size: 37px;\r\n\t\tline-height: 43px;\r\n\t\t/* identical to box height */\r\n\t\tcolor: $yellow-nav;\r\n\t\ttext-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\t\tlist-style: none;\r\n\r\n\t\t@include media(\"<981px\") {\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t}\r\n\t\tli {\r\n\t\t\ta {\r\n\t\t\t\tcolor: $yellow-nav;\r\n\t\t\t\ttext-decoration: none;\r\n\t\t\t\t&:hover {\r\n\t\t\t\t\tcolor: darken($yellow-nav, 8%);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&:hover {\r\n\t\t\t\tcolor: darken($yellow-nav, 8%);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@include media(\"<981px\") {\r\n\t\tflex-direction: column;\r\n\t\ttext-align: center;\r\n\t\tpadding: 10px;\r\n\t}\r\n}\r\n\r\n.header__home {\r\n\tdisplay: none;\r\n\t@include media(\"<981px\") {\r\n\t\tdisplay: block;\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n}\r\n\r\n.header__logo {\r\n\t@include media(\"<981px\") {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.header__favorites {\r\n\tfont-size: 37px;\r\n\tline-height: 43px;\r\n\theight: fit-content;\r\n\tcursor: pointer;\r\n\ttext-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tmargin-bottom: 10px;\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: $yellow-nav;\r\n\t\t&:hover {\r\n\t\t\tcolor: darken($yellow-nav, 8%);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.header__info {\r\n\tfont-size: 37px;\r\n\tline-height: 43px;\r\n\tcursor: pointer;\r\n\tcolor: $yellow-nav;\r\n\ttext-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\theight: fit-content;\r\n\t&:hover {\r\n\t\tcolor: darken($yellow-nav, 8%);\r\n\t}\r\n}\r\n\r\n.profile_image {\r\n\twidth: 60px;\r\n\tborder-radius: 50%;\r\n}\r\n\r\n.header__profile {\r\n\ta {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t@include media(\"<981px\") {\r\n\t\tpadding: 30px;\r\n\t}\r\n}\r\n",".pokedex_body {\r\n\t@include media(\"<640px\") {\r\n\t\twidth: 90%;\r\n\t}\r\n}\r\n\r\n.pokedex__grid {\r\n\twidth: 100%;\r\n\tmax-width: 543px;\r\n\theight: 100px;\r\n\tcursor: pointer;\r\n\tbackground: #ffffff;\r\n\tborder: 2px solid #000000;\r\n\tborder-top: none;\r\n\tborder-left: none;\r\n\tborder-right: none;\r\n\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 0 25px;\r\n\r\n\t&:hover {\r\n\t\tbox-shadow: inset 0px 4px 10px 2px rgba(0, 0, 0, 0.25);\r\n\t}\r\n\r\n\t@include media(\"<640px\") {\r\n\t\twidth: 100%;\r\n\t\tpadding: 0 5px;\r\n\t}\r\n}\r\n\r\n.pokedex__name-container {\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\t@include media(\"<420px\") {\r\n\t\t// flex-direction: column;\r\n\t\t// justify-content: center;\r\n\t}\r\n\r\n\th3 {\r\n\t\t@include media(\"<545px\") {\r\n\t\t\tfont-size: 30px;\r\n\t\t}\r\n\t\t@include media(\"<460px\") {\r\n\t\t\tfont-size: 25px;\r\n\t\t}\r\n\t\t@include media(\"<460px\") {\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\t\t@include media(\"<320px\") {\r\n\t\t\tfont-size: 15px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.pokedex__img {\r\n\timg {\r\n\t\t@include media(\"<420px\") {\r\n\t\t\twidth: 90%;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.pokedex__title {\r\n\tfont-size: 40px;\r\n\tmargin-left: 15px;\r\n\ttext-transform: capitalize;\r\n\tcolor: #000000;\r\n\r\n\t@include media(\"<420px\") {\r\n\t\tmargin-left: 0px;\r\n\t}\r\n}\r\n\r\n.pokedex__icon {\r\n\tfont-style: normal;\r\n\tfont-weight: normal;\r\n\tfont-size: 40px;\r\n\tline-height: 46px;\r\n\tcolor: #c5b7b7;\r\n}\r\n\r\n.pokedex__led {\r\n\t@include media(\"<435px\") {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.pokedex__icon_selected {\r\n\tcolor: $yellow-nav;\r\n}\r\n\r\n.pokedex_footer {\r\n\t.far {\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 55px;\r\n\t\tcolor: #000000;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: lighten(#000000, 30%);\r\n\t\t}\r\n\t}\r\n\t@include media(\"<640px\") {\r\n\t\twidth: 90%;\r\n\t}\r\n}\r\n\r\n.pokedex__searchInput {\r\n\tbackground: #ffffff;\r\n\tborder: 1px solid #000000;\r\n\tbox-sizing: border-box;\r\n\tbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\tborder-radius: 6px;\r\n\twidth: 178px;\r\n\theight: 34px;\r\n\tpadding: 10px;\r\n}\r\n\r\n.form_pokedex {\r\n\talign-items: center;\r\n\tmargin: 50px 0px;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n}\r\n\r\n.pokedex_search_body {\r\n\tpadding: 0px 10px;\r\n}\r\n",".favorites__container {\r\n\tmax-width: 1920px;\r\n\tbackground: #000 url(\"./../../assets/img/img_home/bg_home.png\");\r\n\theight: 100vh;\r\n\tmargin: 0 auto;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\toverflow: scroll;\r\n}\r\n\r\n.favorites__listcontainer {\r\n\tmargin-top: 60px;\r\n\twidth: 95%;\r\n\tmax-width: 500px;\r\n\theight: 600px;\r\n\toverflow-y: scroll;\r\n\tbackground-color: white;\r\n\tborder: 1px solid black;\r\n\tmargin-bottom: 30px;\r\n}\r\n",".modalScreen {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tpadding: 10px;\r\n\ttext-transform: capitalize;\r\n\tflex-wrap: wrap;\r\n\theight: 80vh;\r\n\t@include media(\"<360px\") {\r\n\t\tflex-wrap: nowrap;\r\n\t\tpadding-bottom: 10px;\r\n\t}\r\n}\r\n\r\n.modalScreen__container {\r\n\tdisplay: flex;\r\n\t// padding: 30px;\r\n\t@include media(\"<360px\") {\r\n\t\tflex-direction: column;\r\n\t\tmin-height: min-content;\r\n\t\tmargin-bottom: 25px;\r\n\t}\r\n}\r\n\r\n.modalScreen__info {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n}\r\n\r\n.modalScreen__mini_images {\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t@include media(\"<360px\") {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.modalScreen__title {\r\n\tmargin-bottom: 30px;\r\n\t@include media(\"<360px\") {\r\n\t\tmargin-top: 340px;\r\n\t}\r\n}\r\n\r\n.modalScreen__img {\r\n\tmargin-right: 10px;\r\n\t@include media(\"<360px\") {\r\n\t\tmargin-top: 10px;\r\n\t\tmargin-right: 0;\r\n\t\tmargin: 0 auto;\r\n\t}\r\n}\r\n\r\n.modal_image {\r\n\t@include media(\"<360px\") {\r\n\t\tmargin: 30px auto;\r\n\t\twidth: 150px;\r\n\t}\r\n}\r\n\r\n.modalScreen__info {\r\n\tmargin: 10px;\r\n\r\n\tul {\r\n\t\tlist-style: none;\r\n\t\tmargin-top: 5px;\r\n\t\tli {\r\n\t\t\tmargin-left: 20px;\r\n\t\t\tstrong {\r\n\t\t\t\tfont-size: 20px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.modal_button {\r\n\twidth: 150px;\r\n\theight: 75px;\r\n\t@include media(\"<360px\") {\r\n\t\twidth: 100px;\r\n\t\tfont-size: 24px;\r\n\t}\r\n}\r\n",".loadingScreen__container {\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground: #000 url(\"./../../assets/img/img_home/bg_home.png\");\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n","@import \"./base/settings\";\r\n@import \"./base/responsive\";\r\n\r\n// Components\r\n@import \"./components/loginScreen\";\r\n@import \"./components/homeScreen\";\r\n@import \"./components/header\";\r\n@import \"./components/pokedex\";\r\n@import \"./components/favoritesScreen\";\r\n@import \"./components/modalScreen\";\r\n@import \"./components/loadingScreen\";\r\n\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tfont-family: \"DotGothic16\", sans-serif;\r\n\tbox-sizing: border-box;\r\n}\r\n"],"sourceRoot":""}